{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createAt","Date","now","creatorID","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.627ae469.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                // create newAccount\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                // log in\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev)=> !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log in\"} />\n                {error}\n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;","import { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target : { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <div>\n            <AuthForm />\n        \n            <div>\n                <button onClick={onSocialClick} name =\"google\">Continue with Google</button>\n                <button onClick={onSocialClick} name =\"github\">Continue with Github</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if (nweetObj.attachmentUrl !== \"\")\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    }\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target : { value },\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n        setEditing(false);\n    };\n\n    return (\n        <div>\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input onChange={onChange} value={newNweet} required />\n                        <input type=\"submit\" value=\"Update Nweet\" />\n                    </form>\n                    <button onClick={toggleEditing}>Cancle</button>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n                    )}\n                    {isOwner && (\n                        <>\n                            <button onClick={onDeleteClick}>Delete Nweet</button>\n                            <button onClick={toggleEditing}>Edit Nweet</button>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\n\nexport default Nweet;","import { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0]\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        reader.readAsDataURL(theFile);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n            .ref()\n            .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createAt: Date.now(),\n            creatorID: userObj.uid,\n            attachmentUrl,\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target : { value },\n        } = event;\n        setNweet(value);\n        };\n\n    const onClearattachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input\n                value={nweet}\n                onChange={onChange}\n                type=\"text\"\n                placeholder=\"What's on your mind?\"\n                maxLength={120}\n            />\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange}/>\n            <input type=\"submit\" value=\"Nweet\" />\n            {attachment && (\n                <div>\n                    <img src={attachment} width=\"50px\" height=\"50px\" />\n                    <button onClick={onClearattachment}>Clear</button>\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n\n    useEffect(() => {\n      dbService.collection(\"nweets\").onSnapshot((snapshot) => {\n          const newArray = snapshot.docs.map((document) => ({\n              id: document.id,\n              ...document.data(),\n          }));\n          setNweets(newArray);\n      });\n    }, []);\n\n    return (\n        <>\n            <NweetFactory userObj={userObj}/>\n            <div>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorID === userObj.uid} />\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target : { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({ displayName: newDisplayName});\n            refreshUser();\n        }\n    };\n\n\n    return (\n        <>\n        <form onSubmit={onSubmit}>\n            <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName}/>\n            <input type=\"submit\" value=\"Update Profile\" />\n        </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    );\n};\n\nexport default Profile;","import { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n};\n\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                    <>  \n                        <Route exact path=\"/\">\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\n                        </Route>\n                    </>\n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n                )};\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n          setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/>\n   ) : (\n     \"initializing...\"\n    )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}