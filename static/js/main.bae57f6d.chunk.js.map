{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createAt","Date","now","creatorID","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bae57f6d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                // create newAccount\n                data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                // log in\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount((prev)=> !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log in\"} className=\"authInput authSubmit\" />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target : { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\n            <AuthForm />\n        \n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name =\"google\" className=\"authBtn\">Continue with Google <FontAwesomeIcon icon={faGoogle} /></button>\n                <button onClick={onSocialClick} name =\"github\" className=\"authBtn\">Continue with Github <FontAwesomeIcon icon={faGithub} /></button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if (nweetObj.attachmentUrl !== \"\")\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    }\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target : { value },\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n        setEditing(false);\n    };\n\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input onChange={onChange} value={newNweet} required placeholder=\"Edit your nweet\" autoFocus className=\"formInput\" />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n                    <button onClick={toggleEditing} className=\"formBtn cancleBtn\">Cancle</button>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentUrl && (\n                        <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n                    )}\n                    {isOwner && (\n                        <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\n\nexport default Nweet;","import { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0]\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        if (Boolean(theFile)) {\n            reader.readAsDataURL(theFile);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (nweet === \"\") {\n            return;\n        }\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService\n            .ref()\n            .child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createAt: Date.now(),\n            creatorID: userObj.uid,\n            attachmentUrl,\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target : { value },\n        } = event;\n        setNweet(value);\n        };\n\n    const onClearattachment = () => setAttachment(\"\");\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input \n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120} />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{ backgroundImage: attachment, }}\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearattachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} /> \n                    </div>\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n\n    useEffect(() => {\n      dbService.collection(\"nweets\").orderBy(\"createdAt\", \"desc\").onSnapshot((snapshot) => {\n          const newArray = snapshot.docs.map((document) => ({\n              id: document.id,\n              ...document.data(),\n          }));\n          setNweets(newArray);\n      });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}/>\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorID === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target : { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({ displayName: newDisplayName});\n            refreshUser();\n        }\n    };\n\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input onChange={onChange} type=\"text\" placeholder=\"Display name\" value={newDisplayName} autoFocus className=\"formInput\" />\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10, }}/>\n            </form>\n            <span className=\"formBtn cancleBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;","import { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n                <li>\n                    <Link to=\"/\" style={{ marginRight: 10 }}><FontAwesomeIcon icon={faTwitter} color ={\"#04AAFF\"} size=\"2x\" /></Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\" style={{ marginLeft: 10, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: 12, }}><FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" /><span style={{ marginTop: 10 }}>{userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}</span></Link>\n                </li>\n            </ul>\n        </nav>\n    )\n};\n\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <Switch>\n                {isLoggedIn ? (\n                    <div style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                    }}>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile refreshUser={refreshUser} userObj={userObj}/>\n                        </Route>\n                    </div>\n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n                )};\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n          setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/>\n   ) : (\n     \"initializing...\"\n    )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}